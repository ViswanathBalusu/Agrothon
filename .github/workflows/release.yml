name: Release
on:
  push:
    tags:
      - "v*.*.*"
env:
  IMAGE: ghcr.io/viswanathbalusu/agrothon

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.10
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Get weights
        run: wget -q https://pjreddie.com/media/files/yolov3.weights -O data/models/yolo/yolov3.weights
      - name: Make tar Archive of the data folder
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          tar -czf Agrothon-Data.tar.gz data
      - name: Install deps fro Pypi Release
        run: |
          pip -q install setuptools wheel twine
          pip -q install -r requirements.txt
      - name: Publish to pypi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
      - name: Upload all the data files to github Release
        uses: softprops/action-gh-release@v1
        with:
          name: Agrothon Release ${{ steps.get_version.outputs.VERSION }}
          files: |
            data/fonts/futur.ttf
            data/models/pump/pump.sav
            data/models/rainfall/india_rainfall.csv
            data/models/rainfall/rainfall_model.h5
            data/models/rainfall/rainfall_model.json
            data/models/yolo/coco.names
            data/models/yolo/yolov3.weights
            Agrothon-Data.tar.gz
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Github Container Registry
        run: docker login https://ghcr.io -u token -p ${{ secrets.GH_TOKEN }}

      - name: Build and Push image to Github Container registry
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest
          echo VERSION=$VERSION
          echo "Building"
          sleep 20
          docker build . -t ${{ env.IMAGE }}:$VERSION
          docker tag ${{ env.IMAGE }}:$VERSION ${{ env.IMAGE }}:latest
          echo "Pushing"
          docker push --all-tags ${{ env.IMAGE }}


